#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

indent() {
  sed -u 's/^/       /'
}

# fail fast
set -e

# config
APACHE_VERSION="2.2.22"
APACHE_PATH="apache"
PHP_VERSION="5.3.10"
PHP_PATH="php"

BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2

SITE_DIR=$CACHE_DIR/site
OUTPUT_DIR=$CACHE_DIR/output
GEM_DIR=$CACHE_DIR/vendor/bundle

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move site directory to site dir
rm -rf $SITE_DIR/*
mkdir -p $SITE_DIR
mv * $SITE_DIR

# put the Procfile back :)
if [ -f $SITE_DIR/Procfile ]; then
  mv $SITE_DIR/Procfile $BUILD_DIR
fi

APACHE_URL="https://s3.amazonaws.com/php-lp/apache-$APACHE_VERSION.tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

PHP_URL="https://s3.amazonaws.com/php-lp/php-$PHP_VERSION.tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

# copy config files
cp $BUILDPACK_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $BUILDPACK_DIR/conf/php.ini $PHP_PATH

# add a boot proc
cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/$APACHE_PATH/conf/httpd.conf;
done
touch /app/$APACHE_PATH/logs/{error,access}_log
tail -F /app/$APACHE_PATH/logs/{error,access}_log &
export LD_LIBRARY_PATH=/app/$PHP_PATH/ext PHP_INI_SCAN_DIR=/app/output
echo "Launching apache"
exec /app/$APACHE_PATH/bin/httpd -DNO_DETACH
EOF
chmod +x boot.sh


echo "-----> Installing nanoc"

export LANG=en_US.UTF-8
export GEM_HOME=$GEM_DIR
export PATH=$GEM_DIR/bin:$PATH

# set up gemrc
cat << EOF > ~/.gemrc
gem: --no-rdoc --no-ri
gemhome: $GEM_DIR
gempath:
- $GEM_DIR
EOF

# install bundler
/usr/local/bin/gem install bundler > /dev/null

cd $SITE_DIR

# install nanoc
if [ ! -f $SITE_DIR/Gemfile ]; then
    echo "Gemfile not found" | indent
    exit 1
fi

$GEM_DIR/bin/bundle install --deployment --path $GEM_DIR | grep 'Installing' | indent

echo "-----> Compiling nanoc site"

# set up nanoc config
cat << EOF >> $SITE_DIR/nanoc.yaml
output_dir: $OUTPUT_DIR
enable_output_diff: false
EOF

# go go gadget nanoc!
$GEM_DIR/bin/bundle exec nanoc compile | indent

# and copy it back
cp -r $OUTPUT_DIR $BUILD_DIR/output
