#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

indent() {
  sed -u 's/^/       /'
}

# fail fast
set -e
# fail if pipe to indent fails
set -o pipefail

BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2

# config
APACHE_VERSION="2.4.7"
APACHE_PATH="apache"
PHP_VERSION="5.5.9"
PHP_PATH="php"

SITE_DIR=$CACHE_DIR/site
OUTPUT_DIR=$CACHE_DIR/site/output
GEM_DIR=$CACHE_DIR/vendor/bundle
CONFIG_FILE=$SITE_DIR/nanoc.yaml

# fall back to old-style config.yaml
if [ ! -f $CONFIG_FILE ]; then
  CONFIG_FILE=$SITE_DIR/config.yaml
fi

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move site directory to site dir
rm -rf $SITE_DIR/*
mkdir -p $SITE_DIR
mv * $SITE_DIR

# put the Procfile back :)
if [ -f $SITE_DIR/Procfile ]; then
  mv $SITE_DIR/Procfile $BUILD_DIR
fi

# Sourced from https://github.com/micwallace/dokku-buildpack-apt-apache-php/blob/1c73a6b3095cc3fc6ce5591a7be00e848501512d/bin/compile

APACHE_URL="https://content.wallaceit.com.au/buildpackassets/apache-$APACHE_VERSION.tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz
echo "-----> Apache version $APACHE_VERSION bundled"

PHP_URL="https://content.wallaceit.com.au/buildpackassets/php-$PHP_VERSION.tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz
echo "-----> PHP version $PHP_VERSION bundled"

# copy config files
mkdir -p $APACHE_PATH/conf
cp $BUILDPACK_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $BUILDPACK_DIR/conf/php.ini $PHP_PATH

# add a boot proc
cat >>boot.sh <<EOF
mkdir -p /app/$APACHE_PATH/logs
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> $APACHE_PATH/conf/httpd.conf;
done
touch $APACHE_PATH/logs/{error,access}_log
tail -F $APACHE_PATH/logs/{error,access}_log &
export LD_LIBRARY_PATH=$PHP_PATH/ext PHP_INI_SCAN_DIR=/app/output
echo "Launching apache"
exec $APACHE_PATH/bin/httpd -DNO_DETACH
EOF
chmod +x boot.sh

echo "-----> Compiling nanoc site"

# set up nanoc config
cat << EOF >> $CONFIG_FILE
output_dir: $OUTPUT_DIR
enable_output_diff: false
EOF

# go go gadget nanoc!
bundle exec nanoc compile | indent

# and copy it back
cp -r $OUTPUT_DIR $BUILD_DIR/output
